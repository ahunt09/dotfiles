#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.


ctrl + alt + cmd - k : if ! [[ "$(chunkc tiling::query --window owner)" == "iTerm2" ]]; then osascript -e 'tell application "iTerm2" to activate'; fi && khd -p "cmd - n";
ctrl + alt + cmd - j : open -na /Applications/Google\ Chrome.app && sleep 1 && osascript -e 'tell application "Google Chrome" to activate'

# focus window
ctrl - h : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - h"; else chunkc tiling::window --focus west; fi
ctrl - j : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - j"; else chunkc tiling::window --focus south; fi
ctrl - k : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - k"; else chunkc tiling::window --focus north; fi
ctrl - l : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - l"; else chunkc tiling::window --focus east; fi

# swap window
ctrl + lcmd - h : chunkc tiling::window --swap west
ctrl + lcmd - j : chunkc tiling::window --swap south
ctrl + lcmd - k : chunkc tiling::window --swap north
ctrl + lcmd - l : chunkc tiling::window --swap east

# send window to desktop
rcmd + shift - q : chunkc tiling::window --send-to-desktop 1
rcmd + shift - w : chunkc tiling::window --send-to-desktop 2
rcmd + shift - e : chunkc tiling::window --send-to-desktop 3
rcmd + shift - r : chunkc tiling::window --send-to-desktop 4
rcmd + shift - t : chunkc tiling::window --send-to-desktop 5

rcmd + shift - a : chunkc tiling::window --send-to-desktop 6
rcmd + shift - s : chunkc tiling::window --send-to-desktop 7
rcmd + shift - d : chunkc tiling::window --send-to-desktop 8
rcmd + shift - f : chunkc tiling::window --send-to-desktop 9
rcmd + shift - g : chunkc tiling::window --send-to-desktop 10

rcmd + shift - z : chunkc tiling::window --send-to-desktop 11
rcmd + shift - x : chunkc tiling::window --send-to-desktop 12
rcmd + shift - c : chunkc tiling::window --send-to-desktop 13
rcmd + shift - v : chunkc tiling::window --send-to-desktop 14
rcmd + shift - b : chunkc tiling::window --send-to-desktop 15

shift + alt + cmd - 1 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "q" &
shift + alt + cmd - 2 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "w" &
shift + alt + cmd - 3 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "e" &
shift + alt + cmd - 4 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "r" &
shift + alt + cmd - 5 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "t" &

shift + alt + cmd - 6 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "a" &
shift + alt + cmd - 7 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "s" &
shift + alt + cmd - 8 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "d" &
shift + alt + cmd - 9 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "f" &
shift + alt + cmd - 0 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "g" &

ctrl + shift + cmd - 1 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "z" &
ctrl + shift + cmd - 2 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "x" &
ctrl + shift + cmd - 3 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "c" &
ctrl + shift + cmd - 4 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "v" &
ctrl + shift + cmd - 5 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "b" &

# shrink/extend width/height
ralt - h : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge west --adjust-window-edge east
ralt - j : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge north --adjust-window-edge south
ralt - k : chunkc tiling::window --use-temporary-ratio  0.05 --adjust-window-edge north --adjust-window-edge south
ralt - l : chunkc tiling::window --use-temporary-ratio  0.05 --adjust-window-edge west --adjust-window-edge east

# equalize size of windows
ralt - 0 : chunkc tiling::desktop --equalize

# set insertion point for focused container
# lcmd + shift - "esc" : chunkc tiling::window --use-insertion-point cancel
lcmd + alt - h : chunkc tiling::window --use-insertion-point west
lcmd + alt - j : chunkc tiling::window --use-insertion-point south
lcmd + alt - k : chunkc tiling::window --use-insertion-point north
lcmd + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
# alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
# alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
ctrl + shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
shift + alt - f : chunkc tiling::window --toggle parent

# toggle window split type
alt - x : chunkc tiling::window --toggle split

# float / unfloat window
alt - t : chunkc tiling::window --toggle float

# restart chunkwm
ctrl + alt + lcmd - r : brew services restart chunkwm & brew services restart skhd &

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp

ctrl + alt + cmd - w : chunkc tiling::desktop --deserialize ~/.config/chunkwm/layouts/wide.json
ctrl + alt + cmd - n : chunkc tiling::desktop --deserialize ~/.config/chunkwm/layouts/normal.json
shift + ctrl + alt + cmd - w : chunkc tiling::desktop --serialize ~/.config/chunkwm/layouts/wide.json
shift + ctrl + alt + cmd - n : chunkc tiling::desktop --serialize ~/.config/chunkwm/layouts/normal.json

# Disabled Command - h
cmd - h :
