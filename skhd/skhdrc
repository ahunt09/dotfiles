#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.


cmd - return : if [[ "$(chunkc tiling::query --window owner)" == "kitty" ]]; then khd -p "cmd + shift - return"; else open -na /Applications/Kitty.app; fi

# close focused window
# cmd - w  -> : chunkc tiling::window --focus biggest

#ctrl + alt + cmd - d : ~/src/scripts/bash/set_background_color_to_dialog_result.sh
#ctrl + alt + cmd - c : ~/src/scripts/bash/chunkwm-integrations/toggle_global_inversion.sh

ctrl + alt + cmd - j : osascript ~/src/scripts/applescripts/applescript/OpenNewChromeWindow.scpt
ctrl + alt + cmd - k : osascript ~/src/scripts/applescripts/applescript/OpenNewITermWindow.scpt
# focus window
ctrl - h : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - h"; else chunkc tiling::window --focus west; fi
ctrl - j : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - j"; else chunkc tiling::window --focus south; fi
ctrl - k : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - k"; else chunkc tiling::window --focus north; fi
ctrl - l : if [[ "$(chunkc tiling::query --window name)" == *"vim_hook"* ]]; then khd -p "ctrl + alt - l"; else chunkc tiling::window --focus east; fi

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
ctrl + lcmd - h : chunkc tiling::window --swap west
ctrl + lcmd - j : chunkc tiling::window --swap south
ctrl + lcmd - k : chunkc tiling::window --swap north
ctrl + lcmd - l : chunkc tiling::window --swap east

# move window
ctrl + alt - h : chunkc tiling::window --warp west
ctrl + alt - j : chunkc tiling::window --warp south
ctrl + alt - k : chunkc tiling::window --warp north
ctrl + alt - l : chunkc tiling::window --warp east

# move floating windows / windows on a floating space

shift + lcmd - m : chunkc tiling::window --warp-floating fullscreen
shift + lcmd - h : chunkc tiling::window --warp-floating left
shift + lcmd - l : chunkc tiling::window --warp-floating right

# shift + lcmd - u : chunkc tiling::window --warp-floating top-left
# shift + lcmd - i : chunkc tiling::window --warp-floating top-right
# shift + lcmd - j : chunkc tiling::window --warp-floating bottom-left
# shift + lcmd - k : chunkc tiling::window --warp-floating bottom-right

# desktop switching
# NOTE: this is handled by a karabiner script

# send window to desktop
rcmd + shift - q : chunkc tiling::window --send-to-desktop 1
rcmd + shift - w : chunkc tiling::window --send-to-desktop 2
rcmd + shift - e : chunkc tiling::window --send-to-desktop 3
rcmd + shift - r : chunkc tiling::window --send-to-desktop 4
rcmd + shift - t : chunkc tiling::window --send-to-desktop 5

rcmd + shift - a : chunkc tiling::window --send-to-desktop 6
rcmd + shift - s : chunkc tiling::window --send-to-desktop 7
rcmd + shift - d : chunkc tiling::window --send-to-desktop 8
rcmd + shift - f : chunkc tiling::window --send-to-desktop 9
rcmd + shift - g : chunkc tiling::window --send-to-desktop 10

rcmd + shift - z : chunkc tiling::window --send-to-desktop 11
rcmd + shift - x : chunkc tiling::window --send-to-desktop 12
rcmd + shift - c : chunkc tiling::window --send-to-desktop 13
rcmd + shift - v : chunkc tiling::window --send-to-desktop 14
rcmd + shift - b : chunkc tiling::window --send-to-desktop 15

shift + alt + cmd - 1 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "q" &
shift + alt + cmd - 2 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "w" &
shift + alt + cmd - 3 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "e" &
shift + alt + cmd - 4 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "r" &
shift + alt + cmd - 5 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "t" &

shift + alt + cmd - 6 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "a" &
shift + alt + cmd - 7 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "s" &
shift + alt + cmd - 8 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "d" &
shift + alt + cmd - 9 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "f" &
shift + alt + cmd - 0 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "g" &

ctrl + shift + cmd - 1 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "z" &
ctrl + shift + cmd - 2 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "x" &
ctrl + shift + cmd - 3 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "c" &
ctrl + shift + cmd - 4 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "v" &
ctrl + shift + cmd - 5 -> : ~/src/scripts/bash/chunkwm-integrations/make_changes_for_space.sh "b" &

# focus monitor
rcmd - m : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then chunkc tiling::monitor -f 2; else chunkc tiling::monitor -f 1; fi
# ctrl + alt - k : chunkc tiling::monitor -f prev
# ctrl + alt - j : chunkc tiling::monitor -f next
rcmd - 1  : chunkc tiling::monitor -f 1
rcmd - 2  : chunkc tiling::monitor -f 2
rcmd - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
# ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
# ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
# ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
# ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
# ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3


# increase region size
# decrease region size
ralt - j : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
ralt - k : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
ralt - h : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
ralt - l : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west

# set insertion point for focused container
#ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
#ctrl + alt - h : chunkc tiling::window --use-insertion-point west
#ctrl + alt - j : chunkc tiling::window --use-insertion-point south
#ctrl + alt - k : chunkc tiling::window --use-insertion-point north
#ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
alt - d : chunkc tiling::window --toggle parent

# toggle window split type
# Disabled.  Blocks accents
# alt - e : chunkc tiling::window --toggle split

# float / unfloat window
alt - t : chunkc tiling::window --toggle float

# toggle sticky, float and resize to picture-in-picture size
alt - s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --warp-floating pip-right

# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# restart chunkwm
ctrl + alt + lcmd - r : brew services restart chunkwm

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

# Disabled Command - h
cmd - h :
