#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.


# open terminal, blazingly fast compared to iTerm/Hyper
# cmd - return : open -na /Applications/Kitty.app

# close focused window
# alt - w : chunkc tiling::window --close

# focus window
ctrl - h -> : if [[ "$(chunkc tiling::query --window name)" != *"vim_hook"* ]]; then chunkc tiling::window --focus west; fi
ctrl - j -> : if [[ "$(chunkc tiling::query --window name)" != *"vim_hook"* ]]; then chunkc tiling::window --focus south; fi
ctrl - k -> : if [[ "$(chunkc tiling::query --window name)" != *"vim_hook"* ]]; then chunkc tiling::window --focus north; fi
ctrl - l -> : if [[ "$(chunkc tiling::query --window name)" != *"vim_hook"* ]]; then chunkc tiling::window --focus east; fi

# rcmd - j : chunkc tiling::window --focus prev
# rcmd - k : chunkc tiling::window --focus next

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
alt + shift - h : chunkc tiling::window --swap west
alt + shift - j : chunkc tiling::window --swap south
alt + shift - k : chunkc tiling::window --swap north
alt + shift - l : chunkc tiling::window --swap east

# move window
ctrl + alt - h : chunkc tiling::window --warp west
ctrl + alt - j : chunkc tiling::window --warp south
ctrl + alt - k : chunkc tiling::window --warp north
ctrl + alt - l : chunkc tiling::window --warp east

# move floating windows / windows on a floating space
# shift + alt - up     : chunkc tiling::window --warp-floating fullscreen
# shift + alt - left   : chunkc tiling::window --warp-floating left
# shift + alt - right  : chunkc tiling::window --warp-floating right

shift + lcmd - u : chunkc tiling::window --warp-floating top-left
shift + lcmd - i : chunkc tiling::window --warp-floating top-right
shift + lcmd - j : chunkc tiling::window --warp-floating bottom-left
shift + lcmd - k : chunkc tiling::window --warp-floating bottom-right

# desktop switching
# rcmd - a : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then khd -p "ctrl + alt + cmd - 1"; else khd -p "ctrl + alt + cmd - 6"; fi
# rcmd - s : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then khd -p "ctrl + alt + cmd - 2"; else khd -p "ctrl + alt + cmd - 7"; fi
# rcmd - d : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then khd -p "ctrl + alt + cmd - 3"; else khd -p "ctrl + alt + cmd - 8"; fi
# rcmd - f : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then khd -p "ctrl + alt + cmd - 4"; else khd -p "ctrl + alt + cmd - 9"; fi
# rcmd - g : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then khd -p "ctrl + alt + cmd - 5"; else khd -p "ctrl + alt + cmd + shift - 0"; fi

rcmd - a : khd -p "ctrl + alt + cmd - 1"
rcmd - s : khd -p "ctrl + alt + cmd - 2"
rcmd - d : khd -p "ctrl + alt + cmd - 3"
rcmd - f : khd -p "ctrl + alt + cmd - 4"
rcmd - g : khd -p "ctrl + alt + cmd - 5"

rcmd - z :  khd -p "ctrl + alt + cmd - 6"
rcmd - x :  khd -p "ctrl + alt + cmd - 7"
rcmd - c :  khd -p "ctrl + alt + cmd - 8"
rcmd - v :  khd -p "ctrl + alt + cmd - 9"
rcmd - b :  khd -p "ctrl + alt + cmd - 0"

# send window to desktop
rcmd + shift - a : chunkc tiling::window --send-to-desktop 1
rcmd + shift - s : chunkc tiling::window --send-to-desktop 2
rcmd + shift - d : chunkc tiling::window --send-to-desktop 3
rcmd + shift - f : chunkc tiling::window --send-to-desktop 4
rcmd + shift - g : chunkc tiling::window --send-to-desktop 5
rcmd + shift - z : chunkc tiling::window --send-to-desktop 6
rcmd + shift - x : chunkc tiling::window --send-to-desktop 7
rcmd + shift - c : chunkc tiling::window --send-to-desktop 8
rcmd + shift - v : chunkc tiling::window --send-to-desktop 9
rcmd + shift - b : chunkc tiling::window --send-to-desktop 0

# focus monitor
rcmd - m : if [[ "$(chunkc tiling::query --monitor id)" == "1" ]]; then chunkc tiling::monitor -f 2; else chunkc tiling::monitor -f 1; fi
# ctrl + alt - k : chunkc tiling::monitor -f prev
# ctrl + alt - j : chunkc tiling::monitor -f next
rcmd - 1  : chunkc tiling::monitor -f 1
rcmd - 2  : chunkc tiling::monitor -f 2
rcmd - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
# ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
# ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
# ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
# ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
# ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3


# increase region size
# decrease region size
# shift + lcmd - j : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
# shift + lcmd - k : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
# shift + alt - k : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
# shift + alt - j : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
# shift + lcmd - h : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
# shift + lcmd - l : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
# shift + alt - h : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east
# shift + alt - l : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# set insertion point for focused container
#ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
#ctrl + alt - h : chunkc tiling::window --use-insertion-point west
#ctrl + alt - j : chunkc tiling::window --use-insertion-point south
#ctrl + alt - k : chunkc tiling::window --use-insertion-point north
#ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
alt - d : chunkc tiling::window --toggle parent

# toggle window split type
alt - e : chunkc tiling::window --toggle split

# float / unfloat window
alt - t : chunkc tiling::window --toggle float

# toggle sticky, float and resize to picture-in-picture size
alt - s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --warp-floating pip-right

# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# restart chunkwm
rcmd - r : brew services restart chunkwm

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp
ctrl + alt - s : chunkc tiling::desktop --layout monocle
ctrl + alt - d : chunkc tiling::desktop --layout float

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1
